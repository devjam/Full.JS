// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.FullJS.Sections.Section3 = (function(_super) {

    __extends(Section3, _super);

    function Section3() {
      this.getRatio = __bind(this.getRatio, this);

      this.update = __bind(this.update, this);

      this.init = __bind(this.init, this);
      return Section3.__super__.constructor.apply(this, arguments);
    }

    Section3.prototype.init = function() {
      var _this = this;
      this.container.css({
        overflow: "hidden"
      });
      this.layoutType = FullJS.LAYOUT_TYPE_FIXED;
      this.length = 5000;
      this.oyaji = this.container.find("#oyaji");
      this.currentShiru = null;
      this.shiru = [];
      this.container.find("img").each(function(index, elm) {
        var name;
        elm = $(elm);
        name = elm.attr("class");
        if (name === "shiru") {
          elm.css({
            opacity: 0
          });
          return _this.shiru.push(elm);
        } else {
          return _this[name] = elm;
        }
      });
      return this.chapon.css({
        opacity: 0
      });
    };

    Section3.prototype.update = function(absolute, relative, ratio, width, height) {
      var oyajiY;
      if (relative < 1500) {
        oyajiY = -500;
        if (this.currentShiru) {
          this.currentShiru.css({
            zIndex: 1,
            opacity: 0,
            top: 700
          });
          this.currentShiru = null;
        }
      } else if (relative < 2500) {
        oyajiY = (this.getRatio(relative, 1500, 2500)) * -2000 - 500;
        if (this.currentShiru) {
          this.currentShiru.css({
            zIndex: 1,
            top: (this.getRatio(relative, 1500, 2500)) * 2000 + 700
          });
        } else {
          this.currentShiru = this.shiru[Math.random() * 4 >> 0];
          this.currentShiru.css({
            opacity: 1
          });
        }
      } else {
        oyajiY = (this.getRatio(relative, 4000, 3000)) * 1500 - 500;
        if (this.currentShiru) {
          this.currentShiru.css({
            zIndex: 0,
            top: (this.getRatio(relative, 4000, 3000)) * -1500 + 700
          });
        }
        this.chapon.css({
          opacity: this.getRatio(relative, 3450, 3700, 3550)
        });
      }
      this.oyaji.css({
        opacity: this.getRatio(relative, 500, 1000),
        top: oyajiY
      });
      if (relative > 4000) {
        return this.manager.skipTo(this.anchor + 1000);
      }
    };

    Section3.prototype.getRatio = function(value, min, max, mid) {
      var ratio;
      if (isNaN(mid)) {
        ratio = (value - min) / (max - min);
        if (ratio < 0) {
          return 0;
        } else if (ratio > 1) {
          return 1;
        } else {
          return ratio;
        }
      } else {
        if (value < mid) {
          return this.getRatio(value, min, mid);
        } else {
          return this.getRatio(value, max, mid);
        }
      }
    };

    return Section3;

  })(this.FullJS.Sections.Base);

}).call(this);
